<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="12" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-11-24" time="17:09:24">
  <environment user="TAAVAST3" machine-name="U279610" cwd="C:\Users\taavast3\OneDrive\Blogs\PowerShellDistrict\Pester\EnableExit" user-domain="CORPROOT" platform="Microsoft Windows 7 Enterprise |C:\Windows|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="6.1.7601" clr-version="4.0.30319.42000" />
  <culture-info current-culture="de-CH" current-uiculture="en-US" />
  <test-suite type="PowerShell" name="Pester" executed="True" result="Failure" success="False" time="5.4886" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Testing the Get-ComputerInfos function" executed="True" result="Failure" success="False" time="5.4886" asserts="0" description="Testing the Get-ComputerInfos function">
        <results>
          <test-case description="Should run when no parameter is provided" name="Testing the Get-ComputerInfos function.Should run when no parameter is provided" time="1.6646" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Accept PipeLine input" name="Testing the Get-ComputerInfos function.Should Accept PipeLine input" time="0.1513" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>Expected: value to be empty but it was {@{Architecture=64-bit; ComputerName=U279610; LastBoot=11/23/2016 00:25:14; OSversion=Microsoft Windows 7 Enterprise ; SPversion=1; TotalMemorySize=33111412}}</message>
              <stack-trace>at line: 21 in C:\Users\taavast3\OneDrive\Blogs\PowerShellDistrict\Pester\EnableExit\GetComputerInfos.tests.ps1
21:         $infos | should beNullOrEmpty #Change to BeNullOrEmpty to purposley make it fail
</stack-trace>
            </failure>
          </test-case>
          <test-case description="Should not accept null values" name="Testing the Get-ComputerInfos function.Should not accept null values" time="0.0938" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Accept Array of computers" name="Testing the Get-ComputerInfos function.Should Accept Array of computers" time="0.0655" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Have a ComputerName" name="Testing the Get-ComputerInfos function.Should Have a ComputerName" time="0.163" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Have a TotalMemorySize" name="Testing the Get-ComputerInfos function.Should Have a TotalMemorySize" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Have a CPU" name="Testing the Get-ComputerInfos function.Should Have a CPU" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Have a LastBoot" name="Testing the Get-ComputerInfos function.Should Have a LastBoot" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should Have a ArchitectureType" name="Testing the Get-ComputerInfos function.Should Have a ArchitectureType" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return 10 objects" name="Testing the Get-ComputerInfos function.Should return 10 objects" time="0.4224" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should have mocked Get-ComputerInfos" name="Testing the Get-ComputerInfos function.Should have mocked Get-ComputerInfos" time="0.0744" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Should return 100 objects" name="Testing the Get-ComputerInfos function.Should return 100 objects" time="2.7878" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>